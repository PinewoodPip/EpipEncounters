package examine_fla
{
    import LS_Classes.LSPanelHelpers;
    import LS_Classes.listDisplay;
    import LS_Classes.scrollList;
    import LS_Classes.textEffect;
    import flash.display.Bitmap;
    import flash.display.MovieClip;
    import flash.external.ExternalInterface;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    
    public dynamic class examine_1 extends MovieClip
    {
        
        
        public var bg_mc:MovieClip;
        
        public var closeBtn_mc:smallBtn;
        
        public var close_mc:MovieClip;
        
        public var containerSB_mc:MovieClip;
        
        public var container_mc:MovieClip;
        
        public var name_mc:MovieClip;
        
        public var portrait_mc:MovieClip;
        
        public var title_txt:TextField;
        
        public var userPortrait_mc:MovieClip;
        
        public var list:scrollList;
        
        public var base:MovieClip;
        
        public const frameH:Number = 394;
        
        public var statusContainer_mc:MovieClip;
        
        public const statsW:Number = 425;
        
        public const lineH:Number = 26;
        
        public function examine_1()
        {
            super();
            addFrameScript(0,this.frame1);
        }
        
        public function setType(param1:Boolean) : *
        {
            this.portrait_mc.itemFrame_mc.visible = param1;
            this.portrait_mc.frame_mc.visible = !param1;
            this.portrait_mc.iggy_char.y = !!param1 ? 23 : 13;
        }
        
        public function setName(param1:String) : *
        {
            this.name_mc.name_txt.htmlText = param1.toUpperCase();
            this.name_mc.name_txt.textColor = 8004138;
            this.name_mc.y = 190 - Math.round(this.name_mc.name_txt.textHeight * 0.5);
        }
        
        public function rescaleCharIcon(param1:Bitmap) : *
        {
            if(param1.width > param1.height)
            {
                param1.width = 50;
                param1.scaleY = param1.scaleX;
            }
            else
            {
                param1.height = 50;
                param1.scaleX = param1.scaleY;
            }
        }
        
        public function init() : *
        {
            this.name_mc.name_txt.autoSize = TextFieldAutoSize.CENTER;
            this.closeBtn_mc.init(this.closePressed);
            this.portrait_mc.frame_mc.setAvatar(false);
            this.portrait_mc.frame_mc.setHL(false);
            this.userPortrait_mc.visible = false;
            this.userPortrait_mc.onInit();
        }
        
        public function closePressed() : *
        {
            ExternalInterface.call("hideUI");
        }
        
        public function hideIcon(param1:int) : *
        {
            var _loc2_:Boolean = true;
            if(param1 > 0 && param1 <= 49)
            {
                _loc2_ = false;
            }
            return _loc2_;
        }
        
        public function addStat(param1:Number, param2:Number, param3:String, param4:String, param5:Number) : *
        {
            var _loc6_:Number = param1 + param5 * 1000;
            var _loc7_:MovieClip;
            if(!(_loc7_ = this.list.getElementByNumber("id",_loc6_)))
            {
                (_loc7_ = new StatEl()).id = _loc6_;
                _loc7_.originalId = param1;
                _loc7_.hl_mc.visible = false;
                _loc7_.label_txt.autoSize = TextFieldAutoSize.LEFT;
                _loc7_.val_txt.autoSize = TextFieldAutoSize.RIGHT;
                _loc7_.type = param5;
                _loc7_.mWOverride = this.statsW;
                this.list.addElement(_loc7_,false);
            }
            if(_loc7_)
            {
                _loc7_.updated = true;
                if(this.hideIcon(param2))
                {
                _loc7_.statsIcon_mc.visible = false;
                }
                else
                {
                _loc7_.statsIcon_mc.visible = true;
                _loc7_.statsIcon_mc.gotoAndStop(param2);
                }
                _loc7_.status_mc.visible = false;
                _loc7_.setLabel(param3);

                // value label for talent elements is their custom talent ID.
                _loc7_.val_txt.htmlText = param4;
                if (param5 == 3)
                {
                    _loc7_.val_txt.visible = false;
                }
                this.INTElement(_loc7_);
            }
        }
        
        public function addTitle(param1:Number, param2:String, param3:Number) : *
        {
            var _loc4_:Number = param1 + param3 * 1000;
            var _loc5_:MovieClip;
            if(!(_loc5_ = this.list.getElementByNumber("id",_loc4_)))
            {
                (_loc5_ = new StatTitle()).id = _loc4_;
                _loc5_.originalId = param1;
                _loc5_.label_txt.autoSize = TextFieldAutoSize.LEFT;
                _loc5_.hl_mc.visible = false;
                _loc5_.type = param3;
                _loc5_.mWOverride = this.statsW;
                this.list.addElement(_loc5_,false,false);
            }
            if(_loc5_)
            {
                _loc5_.updated = true;
                _loc5_.label_txt.htmlText = param2.toUpperCase();
                this.INTElement(_loc5_);
            }
        }
        
        public function INTElement(param1:MovieClip) : *
        {
            var _loc2_:uint = 0;
            var _loc3_:MovieClip = null;
            param1.heightOverride = param1.label_txt.numLines * this.lineH;
            if(param1.lineHolder_mc)
            {
                this.removeAllChildren(param1.lineHolder_mc);
                if(param1.label_txt.numLines > 1)
                {
                _loc2_ = 1;
                while(_loc2_ < param1.label_txt.numLines)
                {
                    _loc3_ = new line();
                    _loc3_.alpha = 0.15;
                    _loc3_.y = _loc2_ * this.lineH;
                    param1.lineHolder_mc.addChild(_loc3_);
                    _loc2_++;
                }
                param1.hl_mc.height = param1.label_txt.numLines * this.lineH + 3;
                }
            }
        }
        
        public function removeAllChildren(param1:MovieClip) : *
        {
            while(param1.numChildren > 0)
            {
                param1.removeChildAt(0);
            }
        }
        
        public function cleanUpUnusedStatusses() : *
        {
            var _loc4_:MovieClip = null;
            var _loc1_:Number = this.getType("Status");
            var _loc2_:Number = this.statusContainer_mc.list.currentSelection;
            var _loc3_:* = 0;
            while(_loc3_ < this.statusContainer_mc.list.length)
            {
                if((_loc4_ = this.statusContainer_mc.list.content_array[_loc3_]) && _loc4_.type == _loc1_)
                {
                if(_loc4_.updated)
                {
                    _loc4_.updated = false;
                    _loc3_++;
                }
                else
                {
                    this.statusContainer_mc.list.removeElement(_loc3_,true);
                }
                }
                else
                {
                _loc3_++;
                }
            }
            this.statusContainer_mc.list.positionElements();
            if(this.statusContainer_mc.list.length == 0)
            {
                this.statusContainer_mc.visible = false;
                if(this.statusContainer_mc == this.list.getCurrentMovieClip())
                {
                this.list.next();
                }
            }
            else
            {
                this.statusContainer_mc.heightOverride = this.statusContainer_mc.list.y + this.statusContainer_mc.list.height;
            }
        }
        
        public function cleanUpUnusedStats() : *
        {
            var _loc3_:MovieClip = null;
            var _loc1_:Number = this.getType("Status");
            var _loc2_:* = 0;
            while(_loc2_ < this.list.length)
            {
                _loc3_ = this.list.content_array[_loc2_];
                if(_loc3_ && _loc3_.type != _loc1_)
                {
                if(_loc3_.updated)
                {
                    _loc3_.updated = false;
                    _loc2_++;
                }
                else
                {
                    this.list.removeElement(_loc2_,false);
                }
                }
                else
                {
                _loc2_++;
                }
            }
        }
        
        public function clearPanel() : *
        {
            this.list.clearElements();
            this.list.addElement(this.statusContainer_mc);
            this.statusContainer_mc.visible = false;
            this.statusContainer_mc.list.clearElements();
            this.list.select(0);
        }
        
        public function selectStat(param1:Number) : *
        {
            var _loc2_:MovieClip = this.list.getElementByNumber("id",param1);
            if(_loc2_)
            {
                this.list.select(_loc2_.list_pos);
            }
        }
        
        public function getType(param1:String) : Number
        {
            if(param1 == "Status")
            {
                return 7;
            }
            if(param1 == "Title")
            {
                return 5;
            }
            return -1;
        }
        
        public function addStatus(param1:Boolean, param2:Number, param3:Number, param4:Number, param5:String, param6:Number, param7:String = "") : *
        {
            var _loc8_:MovieClip = null;
            if((_loc8_ = this.statusContainer_mc.list.getElementByNumber("id",param3)) == null)
            {
                if(!param1)
                {
                return;
                }
                (_loc8_ = new StatEl()).id = param3;
                _loc8_.mWOverride = this.statsW;
                _loc8_.label_txt.autoSize = TextFieldAutoSize.LEFT;
                _loc8_.val_txt.autoSize = TextFieldAutoSize.RIGHT;
                _loc8_.hl_mc.visible = false;
                _loc8_.statsIcon_mc.visible = false;
                this.statusContainer_mc.list.addElement(_loc8_);
                _loc8_.type = this.getType("Status");
                this.statusContainer_mc.visible = true;
                this.statusContainer_mc.selected = false;
                _loc8_.status_mc.timer_mc.filters = textEffect.createStrokeFilter(0,1.1,1,1,3);
                _loc8_.label_txt.x = 62;
                _loc8_.hl_mc.x = 62;
            }
            if(param4 == -100)
            {
                _loc8_.status_mc.visible = false;
                _loc8_.val_txt.visible = false;
                _loc8_.type = this.getType("Title");
            }
            _loc8_.setStatusData(-1,param6,param4);
            _loc8_.label_txt.htmlText = param7;
            _loc8_.val_txt.htmlText = param5;
            _loc8_.updated = true;
            this.INTElement(_loc8_);
        }
        
        public function cursorUp() : *
        {
        }
        
        public function cursorDown() : *
        {
        }
        
        public function toggleTooltip() : *
        {
        }
        
        function frame1() : *
        {
            LSPanelHelpers.makeDraggable(this.bg_mc);
            this.list = new scrollList();
            this.list.TOP_SPACING = 10;
            this.list.m_scrollbar_mc.m_SCROLLSPEED = 77;
            this.list.sortOn(["skState","list_id"],[Array.NUMERIC,Array.NUMERIC]);
            this.list.EL_SPACING = 0;
            this.base = root as MovieClip;
            this.name_mc.mouseEnabled = false;
            this.name_mc.mouseChildren = false;
            this.list.m_customElementHeight = 25;
            this.list.setFrame(435,this.frameH);
            this.list.mouseWheelWhenOverEnabled = true;
            this.container_mc.addChild(this.list);
            this.containerSB_mc.addChild(this.list.m_scrollbar_mc);
            this.portrait_mc.mouseEnabled = false;
            this.portrait_mc.mouseChildren = false;
            this.list.m_scrollbar_mc.x = -9;
            this.list.m_scrollbar_mc.y = 0;
            this.list.m_scrollbar_mc.m_hideWhenDisabled = false;
            this.list.m_scrollbar_mc.setLength(414);
            this.statusContainer_mc = new StatTitle();
            this.statusContainer_mc.list = new listDisplay();
            this.statusContainer_mc.addChild(this.statusContainer_mc.list);
            this.statusContainer_mc.list.y = 40;
            this.statusContainer_mc.list.m_customElementHeight = 34;
            this.statusContainer_mc.type = 7;
            this.statusContainer_mc.hl_mc.visible = false;
            this.title_txt.mouseEnabled = false;
        }
    }
}

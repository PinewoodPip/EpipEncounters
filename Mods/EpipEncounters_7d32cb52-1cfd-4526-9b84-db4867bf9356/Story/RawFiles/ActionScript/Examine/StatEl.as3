package
{
    import LS_Classes.larTween;
    import fl.motion.easing.Quartic;
    import flash.display.MovieClip;
    import flash.events.MouseEvent;
    import flash.external.ExternalInterface;
    import flash.text.TextField;
    import flash.text.TextFormat;
    
    public dynamic class StatEl extends MovieClip
    {
        
        
        public var hl_mc:MovieClip;
        
        public var label_txt:TextField;
        
        public var lineHolder_mc:MovieClip;
        
        public var statsIcon_mc:MovieClip;
        
        public var status_mc:Status;
        
        public var val_txt:TextField;
        
        public var timeline:larTween;
        
        public function StatEl()
        {
            super();
            addFrameScript(0,this.frame1);
        }
        
        public function onOver(param1:MouseEvent) : *
        {
            var _loc2_:MovieClip = root as MovieClip;

            // show stat or custom talent tooltip
            _loc2_.showTooltipForMC(this,this.getModifiedID(), (this.type == 3 && this.val_txt.htmlText != ""));
            
            this.hl_mc.visible = true;
            this.timeline = new larTween(this.hl_mc,"alpha",Quartic.easeIn,NaN,1,0.1);
        }
        
        public function onOut(param1:MouseEvent) : *
        {
            this.timeline = new larTween(this.hl_mc,"alpha",Quartic.easeOut,NaN,0,0.1,this.hlInvis);
            ExternalInterface.call("hideTooltip");
        }
        
        public function hlInvis() : *
        {
            this.hl_mc.visible = false;
        }
        
        public function setStatusData(param1:Number, param2:Number, param3:Number) : *
        {
            var _loc4_:String = null;
            if(param3 != -1 && this.status_mc.iconId != param3)
            {
                this.status_mc.iconId = param3;
                _loc4_ = "s" + String(param3);
                this.setIggyImage(this.status_mc,_loc4_);
                this.status_mc.icon_mc.height = this.status_mc.icon_mc.width = 32;
            }
            this.status_mc.setCoolDown(param2);
            if(param1 <= 0)
            {
                this.status_mc.timer_mc.text_txt.htmlText = "";
            }
            else
            {
                this.status_mc.timer_mc.text_txt.htmlText = "" + Math.ceil(param1);
            }
        }
        
        public function setIggyImage(param1:MovieClip, param2:String) : *
        {
            var _loc3_:MovieClip = null;
            if(!param1.texture || param1.texture != param2)
            {
                this.removeChildrenOf(param1.icon_mc);
                _loc3_ = new IggyIcon();
                _loc3_.name = "iggy_" + param2;
                param1.icon_mc.addChild(_loc3_);
                param1.texture = param2;
            }
        }
        
        public function removeChildrenOf(param1:MovieClip) : void
        {
            var _loc2_:int = 0;
            if(param1.numChildren != 0)
            {
                _loc2_ = param1.numChildren;
                while(_loc2_ > 0)
                {
                _loc2_--;
                param1.removeChildAt(_loc2_);
                }
            }
        }
        
        public function setLabel(param1:String) : *
        {
            var _loc2_:Number = 32;
            var _loc3_:TextFormat = this.label_txt.getTextFormat();
            _loc3_.size = _loc2_;
            _loc3_.color = this.label_txt.textColor;
            this.label_txt.setTextFormat(_loc3_);
            this.label_txt.htmlText = param1;
            while(this.label_txt.textWidth > this.label_txt.width)
            {
                _loc3_.size = --_loc2_;
                this.label_txt.setTextFormat(_loc3_);
            }
        }
        
        public function getModifiedID() : *
        {
            var _loc1_:Number = this.originalId;
            if(this.type == 7)
            {
                _loc1_ = this.id;
            }
            return _loc1_;
        }
        
        function frame1() : *
        {
            addEventListener(MouseEvent.ROLL_OVER,this.onOver);
            addEventListener(MouseEvent.ROLL_OUT,this.onOut);
            this.hl_mc.visible = false;
            this.hl_mc.alpha = 0;
            mouseChildren = false;
            hitArea = this.hl_mc;
        }
    }
}

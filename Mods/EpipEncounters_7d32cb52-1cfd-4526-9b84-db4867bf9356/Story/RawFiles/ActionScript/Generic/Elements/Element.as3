package Elements
{
    import LS_Classes.LSPanelHelpers;
    import flash.display.MovieClip;
    import flash.external.ExternalInterface;
    import LS_Classes.listDisplay;
    import flash.text.TextField;
    import flash.events.MouseEvent;
    import flash.events.Event;

    public dynamic class Element extends MovieClip
    {
        public var stringID:String = "Uninitialized!";
        public var elementType:String = "Element";
        public var childElements:Array;

        private var _ignoreUp = false;
        
        public function Element()
        {
            super();
            this.elementType = "Empty";

            this.childElements = new Array();

            this.addEventListener(MouseEvent.MOUSE_DOWN, this.onElementMouseDown);
            this.addEventListener(MouseEvent.MOUSE_UP, this.onElementMouseUp);
            this.addEventListener(MouseEvent.MOUSE_OVER, this.onElementMouseOver);
            this.addEventListener(MouseEvent.MOUSE_OUT, this.onElementMouseOut);
        }

        public function AddChildElement(mc:MovieClip) : *
        {
            this.childElements[mc.stringID] = mc;
            this[mc.stringID] = mc;
            this.addChild(mc);
        }

        // UTILITY

        public function SetAsUIDraggableArea() : *
        {
            LSPanelHelpers.makeDraggable(this);
        }

        public function SetScale(scale:Number) : *
        {
            this.scaleX = scale;
            this.scaleY = scale;
        }

        public function SetPosition(x:Number, y:Number) : *
        {
            this.x = x;
            this.y = y;
        }

        // EVENT LISTENERS

        public function onElementMouseUp(e:MouseEvent) : *
        {
            // trace("Click: " + this.stringID);
            if (this._ignoreUp)
            {
                this._ignoreUp = false;
            }
            else
            {
                ExternalInterface.call("elementMouseUp", this.stringID);
                this._ignoreUp = true;
            }
        }

        public function onElementMouseDown(e:MouseEvent) : *
        {
            ExternalInterface.call("elementMouseDown", this.stringID);
        }

        public function onElementMouseOver(e:MouseEvent) : *
        {
            ExternalInterface.call("elementMouseOver", this.stringID);
        }

        public function onElementMouseOut(e:MouseEvent) : *
        {
            ExternalInterface.call("elementMouseOut", this.stringID);
        }
    }
}

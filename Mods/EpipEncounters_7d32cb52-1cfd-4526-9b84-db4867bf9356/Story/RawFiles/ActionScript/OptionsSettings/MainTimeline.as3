package optionsSettings_fla
{
    import flash.display.MovieClip;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    
    public dynamic class MainTimeline extends MovieClip
    {
        
        
        public var mainMenu_mc:MovieClip;
        
        public var selectedInfo_txt:TextField;
        
        public var events:Array;
        
        public var layout:String;
        
        public var curTooltip:String;
        
        public var hasTooltip:Boolean;
        
        public const ElW:Number = 942;
        
        public var update_Array:Array;
        
        public var baseUpdate_Array:Array;
        
        public var button_array:Array;
        
        public const anchorId:String = "optionsmenu";
        
        public const anchorPos:String = "center";
        
        public const anchorTPos:String = "center";
        
        public const anchorTarget:String = "screen";
        
        public function MainTimeline()
        {
            super();
            addFrameScript(0,this.frame1);
        }
        
        public function onEventInit() : *
        {
            this.selectedInfo_txt.autoSize = TextFieldAutoSize.LEFT;
            this.selectedInfo_txt.visible = false;
            this.selectedInfo_txt.mouseEnabled = false;
            this.mainMenu_mc.setMainScrolling(true);
            this.mainMenu_mc.ok_mc.snd_Click = "UI_Gen_Accept";
            this.mainMenu_mc.apply_mc.snd_Click = "UI_Gen_Apply";
        }
        
        public function parseUpdateArray() : *
        {
            var _loc2_:uint = 0;
            var _loc3_:Number = NaN;
            var _loc4_:String = null;
            var _loc5_:Boolean = false;
            var _loc6_:Number = NaN;
            var _loc7_:Boolean = false;
            var _loc8_:String = null;
            var _loc9_:Number = NaN;
            var _loc10_:Number = NaN;
            var _loc11_:Number = NaN;
            var _loc12_:Number = NaN;
            var _loc13_:Number = NaN;
            var _loc14_:Number = NaN;
            var _loc15_:Boolean = false;
            var _loc16_:Number = NaN;
            var _loc17_:String = null;
            var _loc18_:String = null;
            var _loc19_:Number = NaN;
            var _loc1_:Number = this.update_Array.length;
            if(_loc1_ > 0)
            {
                _loc2_ = 0;
                while(_loc2_ < _loc1_)
                {
                switch(this.update_Array[_loc2_++])
                {
                    case 0:
                        _loc3_ = this.update_Array[_loc2_++];
                        _loc4_ = this.update_Array[_loc2_++];
                        _loc5_ = this.update_Array[_loc2_++];
                        _loc6_ = this.update_Array[_loc2_++];
                        _loc7_ = this.update_Array[_loc2_++];
                        _loc8_ = this.update_Array[_loc2_++];
                        this.mainMenu_mc.addMenuCheckbox(_loc3_,_loc4_,_loc5_,_loc6_,_loc7_,_loc8_);
                        continue;
                    case 1:
                        _loc9_ = this.update_Array[_loc2_++];
                        _loc4_ = this.update_Array[_loc2_++];
                        _loc8_ = this.update_Array[_loc2_++];
                        this.mainMenu_mc.addMenuDropDown(_loc9_,_loc4_,_loc8_);
                        continue;
                    case 2:
                        _loc9_ = this.update_Array[_loc2_++];
                        _loc4_ = this.update_Array[_loc2_++];
                        this.mainMenu_mc.addMenuDropDownEntry(_loc9_,_loc4_);
                        continue;
                    case 3:
                        _loc9_ = this.update_Array[_loc2_++];
                        _loc10_ = this.update_Array[_loc2_++];
                        this.selectMenuDropDownEntry(_loc9_,_loc10_);
                        continue;
                    case 4:
                        _loc11_ = this.update_Array[_loc2_++];
                        _loc4_ = this.update_Array[_loc2_++];
                        _loc10_ = this.update_Array[_loc2_++];
                        _loc12_ = this.update_Array[_loc2_++];
                        _loc13_ = this.update_Array[_loc2_++];
                        _loc14_ = this.update_Array[_loc2_++];
                        _loc15_ = this.update_Array[_loc2_++];
                        _loc8_ = this.update_Array[_loc2_++];
                        this.mainMenu_mc.addMenuSlider(_loc11_,_loc4_,_loc10_,_loc12_,_loc13_,_loc14_,_loc15_,_loc8_);
                        continue;
                    case 5:
                        _loc16_ = this.update_Array[_loc2_++];
                        _loc4_ = this.update_Array[_loc2_++];
                        _loc17_ = this.update_Array[_loc2_++];
                        _loc5_ = this.update_Array[_loc2_++];
                        _loc8_ = this.update_Array[_loc2_++];
                        this.mainMenu_mc.addMenuButton(_loc16_,_loc4_,_loc17_,_loc5_,_loc8_);
                        continue;
                    case 6:
                        _loc4_ = this.update_Array[_loc2_++];
                        this.mainMenu_mc.addMenuLabel(_loc4_);
                        continue;
                    case 7:
                        _loc18_ = this.update_Array[_loc2_++];
                        this.mainMenu_mc.setTitle(_loc18_);
                        continue;
                    case 8:
                        _loc9_ = this.update_Array[_loc2_++];
                        _loc5_ = this.update_Array[_loc2_++];
                        this.setMenuDropDownEnabled(_loc9_,_loc5_);
                        continue;
                    case 9:
                        _loc3_ = this.update_Array[_loc2_++];
                        _loc5_ = this.update_Array[_loc2_++];
                        _loc19_ = !!this.update_Array[_loc2_++]?Number(1):Number(0);
                        this.setMenuCheckbox(_loc3_,_loc5_,_loc19_);
                        continue;
                    default:
                        continue;
                }
                }
            }
            this.update_Array = new Array();
        }
        
        public function parseBaseUpdateArray() : *
        {
            var _loc2_:uint = 0;
            var _loc3_:Number = NaN;
            var _loc4_:String = null;
            var _loc5_:Boolean = false;
            var _loc6_:Object = null;
            var _loc7_:String = null;
            var _loc8_:String = null;
            var _loc1_:Number = this.baseUpdate_Array.length;
            if(_loc1_ > 0)
            {
                _loc2_ = 0;
                while(_loc2_ < _loc1_)
                {
                switch(this.baseUpdate_Array[_loc2_++])
                {
                    case 0:
                        _loc3_ = this.baseUpdate_Array[_loc2_++];
                        _loc4_ = this.baseUpdate_Array[_loc2_++];
                        _loc5_ = this.baseUpdate_Array[_loc2_++];
                        _loc8_ = this.baseUpdate_Array[_loc2_++]; // Callback
                        this.mainMenu_mc.addOptionButton(_loc4_,_loc8_,_loc3_,_loc5_);
                        continue;
                    case 1:
                        _loc6_ = this.baseUpdate_Array[_loc2_++];
                        _loc3_ = _loc6_ as Number;
                        _loc4_ = this.baseUpdate_Array[_loc2_++];
                        this.button_array[_loc3_].text_txt.htmlText = _loc4_.toUpperCase();
                        continue;
                    case 2:
                        _loc7_ = this.baseUpdate_Array[_loc2_++];
                        this.mainMenu_mc.toptitle_txt.htmlText = _loc7_;
                        continue;
                    default:
                        continue;
                }
                }
                this.baseUpdate_Array = new Array();
            }
        }
        
        public function onEventResize() : *
        {
        }
        
        public function onEventUp(param1:Number) : Boolean
        {
            return false;
        }
        
        public function onEventDown(param1:Number) : Boolean
        {
            var _loc2_:Boolean = false;
            switch(this.events[param1])
            {
                case "IE UIUp":
                this.mainMenu_mc.moveCursor(true);
                _loc2_ = true;
                break;
                case "IE UIDown":
                this.mainMenu_mc.moveCursor(false);
                _loc2_ = true;
                break;
                case "IE UICancel":
                this.cancelChanges();
                _loc2_ = true;
            }
            return _loc2_;
        }
        
        public function hideWin() : void
        {
            this.mainMenu_mc.visible = false;
        }
        
        public function showWin() : void
        {
            this.mainMenu_mc.visible = true;
        }
        
        public function getHeight() : Number
        {
            return this.mainMenu_mc.height;
        }
        
        public function getWidth() : Number
        {
            return this.mainMenu_mc.width;
        }
        
        public function setX(param1:Number) : void
        {
            this.mainMenu_mc.x = param1;
        }
        
        public function setY(param1:Number) : void
        {
            this.mainMenu_mc.y = param1;
        }
        
        public function setPos(param1:Number, param2:Number) : void
        {
            this.mainMenu_mc.x = param1;
            this.mainMenu_mc.y = param2;
        }
        
        public function getX() : Number
        {
            return this.mainMenu_mc.x;
        }
        
        public function getY() : Number
        {
            return this.mainMenu_mc.y;
        }
        
        public function openMenu() : *
        {
            this.mainMenu_mc.openMenu();
        }
        
        public function closeMenu() : *
        {
            this.mainMenu_mc.closeMenu();
        }
        
        public function cancelChanges() : *
        {
            this.mainMenu_mc.cancelPressed();
        }
        
        public function addMenuInfoLabel(param1:Number, param2:String, param3:String) : *
        {
            this.mainMenu_mc.addMenuInfoLabel(param1,param2,param3);
        }
        
        public function setMenuCheckbox(param1:Number, param2:Boolean, param3:Number) : *
        {
            this.mainMenu_mc.setMenuCheckbox(param1,param2,param3);
        }
        
        public function addMenuSelector(param1:Number, param2:String) : *
        {
            this.mainMenu_mc.addMenuSelector(param1,param2);
        }
        
        public function addMenuSelectorEntry(param1:Number, param2:String) : *
        {
            this.mainMenu_mc.addMenuSelectorEntry(param1,param2);
        }
        
        public function selectMenuDropDownEntry(param1:Number, param2:Number) : *
        {
            this.mainMenu_mc.selectMenuDropDownEntry(param1,param2);
        }
        
        public function clearMenuDropDownEntries(param1:Number) : *
        {
            this.mainMenu_mc.clearMenuDropDownEntries(param1);
        }
        
        public function setMenuDropDownEnabled(param1:Number, param2:Boolean) : *
        {
            this.mainMenu_mc.setMenuDropDownEnabled(param1,param2);
        }
        
        public function setMenuDropDownDisabledTooltip(param1:Number, param2:String) : *
        {
            this.mainMenu_mc.setMenuDropDownDisabledTooltip(param1,param2);
        }
        
        public function setMenuSlider(param1:Number, param2:Number) : *
        {
            this.mainMenu_mc.setMenuSlider(param1,param2);
        }
        
        public function addOptionButton(param1:String, param2:String, param3:Function, param4:Boolean) : *
        {
            this.mainMenu_mc.addOptionButton(param1,param2,param3,param4);
        }
        
        public function setButtonEnabled(param1:Number, param2:Boolean) : *
        {
            this.mainMenu_mc.setButtonEnabled(param1,param2);
        }
        
        public function removeItems() : *
        {
            this.mainMenu_mc.removeItems();
        }
        
        public function setButtonDisable(param1:Number, param2:Boolean) : *
        {
            this.button_array[param1].disable_mc.visible = param2;
            this.button_array[param1].bg_mc.visible = !param2;
        }
        
        public function resetMenuButtons(param1:Number) : *
        {
            this.mainMenu_mc.resetMenuButtons(param1);
        }
        
        function frame1() : *
        {
            this.events = new Array("IE UIUp","IE UIDown","IE UICancel");
            this.layout = "fixed";
            this.curTooltip = "";
            this.hasTooltip = false;
            this.update_Array = new Array();
            this.baseUpdate_Array = new Array();
            this.button_array = new Array(this.mainMenu_mc.ok_mc,this.mainMenu_mc.cancel_mc,this.mainMenu_mc.apply_mc);
        }
    }
}

package
{
    import flash.display.MovieClip;
    import flash.events.MouseEvent;
    import flash.external.ExternalInterface;
    import flash.geom.Point;
    import flash.text.TextField;
    import flash.text.TextFieldAutoSize;
    
    public dynamic class talentEl extends MovieClip
    {
        
        
        public var hit_mc:hit;
        
        public var min_mc:minusButton;
        
        public var plus_mc:plusButton;
        
        public var text_txt:TextField;
        
        public const racialColour:Number = 6574152;
        
        public var root_mc:MovieClip;
        
        public var isRacial:Boolean;
        
        public var isActive:Boolean;
        
        public var dColour:Number;

        public var customTalentId:String = "";
        
        public function talentEl()
        {
            super();
            addFrameScript(0,this.frame1);
        }
        
        public function onInit(param1:MovieClip, param2:Boolean) : *
        {
            this.root_mc = param1;
            this.isRacial = param2;
            this.min_mc.visible = false;
            this.plus_mc.visible = false;
            this.text_txt.wordWrap = this.text_txt.multiline = false;
            this.text_txt.autoSize = TextFieldAutoSize.LEFT;
            this.gotoAndStop(1);
            this.plus_mc.init(this.root_mc.CCPanel_mc.talents_mc.toggleTalent,this);
            this.min_mc.init(this.root_mc.CCPanel_mc.talents_mc.toggleTalent,this);
            this.hit_mc.addEventListener(MouseEvent.ROLL_OVER,this.onOver);
            this.hit_mc.addEventListener(MouseEvent.ROLL_OUT,this.onOut);
        }
        
        public function setState(param1:Boolean) : *
        {
            if(!this.isRacial)
            {
                this.isActive = param1;
                this.gotoAndStop(!!param1 ? 2 : 1);
                this.plus_mc.visible = !!this.choosable ? !param1 && this.root_mc.availableTalentPoints > 0 : false;
                this.min_mc.visible = !!this.choosable ? Boolean(param1) : false;
                this.text_txt.textColor = this.dColour;
            }
            else
            {
                this.isActive = true;
                this.gotoAndStop(3);
                this.text_txt.textColor = this.racialColour;
            }
        }
        
        public function setText(param1:String) : *
        {
            this.text_txt.htmlText = param1;
        }
        
        public function onOver(param1:MouseEvent) : *
        {
            var _loc2_:Point = this.localToGlobal(new Point(0,0));
            // pip - changed call
            ExternalInterface.call("pipShowTalentTooltip",this.root_mc.characterHandle,this.talentID,_loc2_.x - this.root_mc.x,_loc2_.y,this.hit_mc.width,this.hit_mc.height,"left",this.customTalentId);
        }
        
        public function onOut(param1:MouseEvent) : *
        {
            ExternalInterface.call("hideTooltip");
        }
        
        function frame1() : *
        {
        }
    }
}

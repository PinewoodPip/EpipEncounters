Version 1
SubGoalCombiner SGC_AND
INITSECTION

KBSECTION

// Inconspicuous rework. Most of the code at the bottom is reused from old Incons, for the free sneak + invis at combat start.

// free sneak+invis at start of combat.
// at end of turn in round 2+, do a free sneak.
// at start of turn, remove sneak.

// remove this sneak at the end of combat
PROC PROC_AMER_Combat_Cleanup(_)
AND
DB_PIP_Incons_Sneaking(_Char)
THEN
NOT DB_PIP_Incons_Sneaking(_Char);
RemoveStatus(_Char, "SNEAKING");

// clear db at combat enter
PROC PROC_AMER_CharAddedToCombat((CHARACTERGUID)_Char, (INTEGER)_)
AND
DB_PIP_Incons_Sneaking(_Char)
THEN
NOT DB_PIP_Incons_Sneaking(_Char);

// sneak at end of turn, starting from round 2
PROC PROC_AMER_Combat_TurnEnded((INTEGER)_, (CHARACTERGUID)_Char, (INTEGER)_HasActed)
AND
CharacterHasTalent(_Char, "RangerLoreArrowRecover", 1)
AND
DB_PIP_CharacterCombatRound(_Char, _Round)
AND
_Round > 1
AND
HasActiveStatus(_Char, "SNEAKING", 0) // do not do this is already sneaking or playing dead.
AND
HasActiveStatus(_Char, "PLAY_DEAD", 0)
THEN
PROC_AMER_GEN_DoFreeSneak(_Char);
DB_PIP_Incons_Sneaking(_Char);

// if the incons character was sneaking *from this talent* at turn start, remove it.
PROC PROC_AMER_Combat_TurnStarted((CHARACTERGUID)_Char, (INTEGER)_)
// now happens always, instead of only happening if the sneak was from this talent.
// AND
// DB_PIP_Incons_Sneaking(_Char)
AND
CharacterHasTalent(_Char, "RangerLoreArrowRecover", 1)
THEN
// CharacterStatusText(_Char, "Unsneaking");
ProcObjectTimer(_Char, "PIP_TricksterRepertoire_Unsneak", 100);

PROC ProcObjectTimerFinished((CHARACTERGUID)_Char, "PIP_TricksterRepertoire_Unsneak")
THEN
NOT DB_PIP_Incons_Sneaking(_Char);
RemoveStatus(_Char, "SNEAKING");
// CharacterStatusText(_Char, "removed");

// ending your turn within a vision cone DOES NOT fire CharacterSawSneakingCharacter. we use this to clear the db. it iterates ALL characters rather than current to handle characters being teleported away from an incons character that failed their auto-sneak, which would possibly cause an incons character to not clear their db even if their autosneak failed
// PROC PROC_AMER_Combat_TurnStarted((CHARACTERGUID)_, (INTEGER)_Instance)
// AND
// DB_PIP_Incons_Sneaking(_InconsSneakingChar)
// AND
// DB_CombatCharacters(_Char, _)
// AND
// NOT DB_IsPlayer(_Char)
// AND
// CharacterCanSee(_Char, _InconsSneakingChar, 1)
// THEN
// NOT DB_PIP_Incons_Sneaking(_InconsSneakingChar);

// proper solution to problem above. fucking hilarious
IF
CharacterStatusApplied(_Char, "SNEAKING", _Char)
AND
DB_PIP_Incons_Sneaking(_Char)
AND
HasActiveStatus(_Char, "SNEAKING", 0)
THEN
NOT DB_PIP_Incons_Sneaking(_Char);
// CharacterStatusText(_Char, "Broke sneaking");

IF
CharacterStatusRemoved(_Char, "SNEAKING", _)
AND
DB_PIP_Incons_Sneaking(_Char)
THEN
NOT DB_PIP_Incons_Sneaking(_Char);

// clear db when spotted.
IF CharacterSawSneakingCharacter((CHARACTERGUID)_Spotter, (CHARACTERGUID)_Char)
AND
DB_PIP_Incons_Sneaking(_Char)
THEN
NOT DB_PIP_Incons_Sneaking(_Char);
// CharacterStatusText(_Spotter, "gotcha");

IF
ObjectReadyInCombat((CHARACTERGUID)_Char, _)
AND
CharacterHasTalent(_Char, "RangerLoreArrowRecover", 1)
THEN
PROC_AMER_Talents_StenchPip_Sneak(_Char);

// When joining combat, gain invis until the end of your first turn.
PROC PROC_AMER_Talents_StenchPip_Sneak((CHARACTERGUID)_Char)
THEN
// ApplyStatus(_Char, "INVISIBLE", 6.0);
PROC_AMER_GEN_ApplyStatusUntilNextTurn(_Char, "INVISIBLE", _Char);
PROC_AMER_GEN_DoFreeSneak(_Char);

PROC PROC_AMER_GEN_FilteredStatus_Applied((CHARACTERGUID)_Char, _, "UNSHEATHED", _)
AND
CharacterHasTalent(_Char, "RangerLoreArrowRecover", 1)
AND
DB_AMER_Talents_StenchPip_BufferedSneak(_Char)
AND
NOT QRY_AMER_Talents_StenchPip_TempstatSneak(_Char)    //Defer to a tempstat cleanup timer if it exists.
THEN
NOT DB_AMER_Talents_StenchPip_BufferedSneak(_Char);
PROC_AMER_Talents_StenchPip_Sneak(_Char);

// ------------------------------------------------
// REGION old code inherited from old school incons - with unsheath detection and goal completion removed - as we need to run this goal throughout entire fights

QRY QRY_AMER_Talents_StenchPip_TempstatSneak((CHARACTERGUID)_Char)
AND
DB_ObjectTimer(_Char, _ObjectTimerName, "AMER_TempStat_Cleanup")
THEN
DB_AMER_Talents_StenchPip_BufferedSneak(_Char);


PROC PROC_AMER_TempStat_Cleanup((CHARACTERGUID)_Char)
AND
DB_AMER_Talents_StenchPip_BufferedSneak(_Char)
THEN
NOT DB_AMER_Talents_StenchPip_BufferedSneak(_Char);
PROC_AMER_Talents_StenchPip_Sneak(_Char);

PROC PROC_AMER_GEN_CharacterBeingRemoved((CHARACTERGUID)_Char)
AND
DB_AMER_Talents_StenchPip_BufferedSneak(_Char)
THEN
NOT DB_AMER_Talents_StenchPip_BufferedSneak(_Char);

PROC PROC_AMER_GEN_CharDeactivated((CHARACTERGUID)_Char)
AND
DB_AMER_Talents_StenchPip_BufferedSneak(_Char)
THEN
NOT DB_AMER_Talents_StenchPip_BufferedSneak(_Char);

// REGION fix for whiny compiler.
IF ItemSendToHomesteadEvent(_, _Item)
AND
DB_AMER_GEN_SpecialArrow("", 10)
AND
DB_AMER_GEN_StrtoInt(_, _)
THEN
DB_NOOP();
// DB_AMER_GEN_StrtoInt("", -1);

EXITSECTION

ENDEXITSECTION
ParentTargetEdge "AMER_GLO_Talents"